# Supervisor configuration for Stevedores Dashboard 3.0
# Manages multiple services for production deployment

[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor/

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Nginx web server
[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
startretries=3
stdout_logfile=/var/log/stevedores-dashboard/nginx-stdout.log
stderr_logfile=/var/log/stevedores-dashboard/nginx-stderr.log
stdout_logfile_maxbytes=10MB
stderr_logfile_maxbytes=10MB
stdout_logfile_backups=5
stderr_logfile_backups=5

# Gunicorn WSGI server
[program:gunicorn]
command=/home/stevedores/.local/bin/gunicorn --config gunicorn.conf.py wsgi:application
directory=/home/stevedores
user=stevedores
autostart=true
autorestart=true
startretries=3
stdout_logfile=/var/log/stevedores-dashboard/gunicorn-stdout.log
stderr_logfile=/var/log/stevedores-dashboard/gunicorn-stderr.log
stdout_logfile_maxbytes=10MB
stderr_logfile_maxbytes=10MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=FLASK_ENV=production,FLASK_CONFIG=production,PYTHONPATH=/home/stevedores

# Optional: Redis for caching (if needed)
# [program:redis]
# command=/usr/bin/redis-server /etc/redis/redis.conf
# autostart=true
# autorestart=true
# startretries=3
# stdout_logfile=/var/log/stevedores-dashboard/redis-stdout.log
# stderr_logfile=/var/log/stevedores-dashboard/redis-stderr.log

# Optional: Celery worker for background tasks
# [program:celery-worker]
# command=/home/stevedores/.local/bin/celery -A app.celery worker --loglevel=info
# directory=/home/stevedores
# user=stevedores
# autostart=true
# autorestart=true
# startretries=3
# stdout_logfile=/var/log/stevedores-dashboard/celery-worker-stdout.log
# stderr_logfile=/var/log/stevedores-dashboard/celery-worker-stderr.log
# environment=FLASK_ENV=production,FLASK_CONFIG=production,PYTHONPATH=/home/stevedores

# Optional: Celery beat scheduler
# [program:celery-beat]
# command=/home/stevedores/.local/bin/celery -A app.celery beat --loglevel=info
# directory=/home/stevedores
# user=stevedores
# autostart=true
# autorestart=true
# startretries=3
# stdout_logfile=/var/log/stevedores-dashboard/celery-beat-stdout.log
# stderr_logfile=/var/log/stevedores-dashboard/celery-beat-stderr.log
# environment=FLASK_ENV=production,FLASK_CONFIG=production,PYTHONPATH=/home/stevedores

# Log rotation service
[program:logrotate]
command=/usr/sbin/logrotate /etc/logrotate.d/stevedores-dashboard
autostart=false
autorestart=false
startsecs=0

# Health monitoring service
[program:health-monitor]
command=/bin/bash -c "while true; do curl -f http://localhost/health > /dev/null 2>&1 || echo 'Health check failed at $(date)' >> /var/log/stevedores-dashboard/health.log; sleep 30; done"
autostart=true
autorestart=true
startretries=3
stdout_logfile=/var/log/stevedores-dashboard/health-monitor.log
stderr_logfile=/var/log/stevedores-dashboard/health-monitor.log

# Group all services for easy management
[group:stevedores-dashboard]
programs=nginx,gunicorn,health-monitor
priority=999